//  https://gitee.com/zhougaojun/KangarooAdmin.git
plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group 'com.vacomall'
version '0.0.1'

sourceCompatibility = targetJavaVersion
targetCompatibility = targetJavaVersion

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'


configurations {
    // all*.exclude group: 'commons-logging'
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
}

ext {
    spring_version = "4.3.7.RELEASE"
    mybatis_plus_version = "2.0.8"
    mysql_version = "5.1.32"
    jackson_version = "2.7.4"
    druid_version = "1.0.19"
    servlet_api_version = "3.0.1"
    commons_lang3_version = "3.4"
    commons_fileupload_version = "1.3.1"
    fastjson_version = "1.2.11"
    freemarker_version = "2.3.23"
    kaptcha_version = "0.0.9"
    ehcache_version = "2.6.11"
    hibernate_validator_version = "5.1.3.Final"
    guava_version = "19.0"
    gson_version = "2.8.0"
    shiro_version = "1.3.2"
    velocity_version = "1.7"
    logback_version = "1.0.7"
    log4j_over_slf4j_version = "1.7.7"

    lombok_version = "1.18.12"
}

dependencies {
//    implementation(platform('org.springframework.boot:spring-boot-dependencies:1.5.2.RELEASE')) {
//        exclude group: "mysql", module: "mysql-connector-java"
//    }

    implementation "org.apache.commons:commons-lang3:${commons_lang3_version}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jackson_version}"
    implementation "ch.qos.logback:logback-core:${logback_version}"
    implementation "ch.qos.logback:logback-classic:${logback_version}"
    implementation "org.slf4j:log4j-over-slf4j:${log4j_over_slf4j_version}"
    implementation "javax.servlet:javax.servlet-api:${servlet_api_version}"
    implementation "com.baomidou:mybatis-plus:${mybatis_plus_version}"
    implementation "mysql:mysql-connector-java:${mysql_version}"
    implementation "com.alibaba:druid:${druid_version}"
    implementation "org.springframework:spring-context:${spring_version}"
    implementation "org.springframework:spring-beans:${spring_version}"
    implementation "org.springframework:spring-webmvc:${spring_version}"
    implementation "org.springframework:spring-jdbc:${spring_version}"
    implementation "org.springframework:spring-aspects:${spring_version}"
    implementation "org.springframework:spring-context-support:${spring_version}"
    implementation "org.springframework:spring-aop:${spring_version}"
    implementation "org.springframework:spring-web:${spring_version}"
    implementation "org.springframework:spring-core:${spring_version}"
    implementation "commons-fileupload:commons-fileupload:${commons_fileupload_version}"
    implementation "org.freemarker:freemarker:${freemarker_version}"
    implementation "com.alibaba:fastjson:${fastjson_version}"
    implementation "net.sf.ehcache:ehcache-core:${ehcache_version}"
    implementation "com.github.axet:kaptcha:${kaptcha_version}"
    implementation "org.hibernate:hibernate-validator:${hibernate_validator_version}"
    implementation "com.google.guava:guava:${guava_version}"
    implementation "com.google.code.gson:gson:${gson_version}"
    implementation "org.apache.shiro:shiro-core:${shiro_version}"
    implementation "org.apache.shiro:shiro-ehcache:${shiro_version}"
    implementation "org.apache.shiro:shiro-spring:${shiro_version}"
    implementation "org.apache.shiro:shiro-web:${shiro_version}"
    implementation "org.apache.velocity:velocity:${velocity_version}"
    testCompile "org.springframework:spring-test:${spring_version}"

    implementation("commons-logging:commons-logging:1.2")

    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"
    testCompileOnly "org.projectlombok:lombok:${lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"

    // testCompile "org.springframework.boot:spring-boot-starter-test"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/java', 'src/main/resources', 'src/main/webapp']
        }
    }
}

defaultTasks 'clean', 'build'
